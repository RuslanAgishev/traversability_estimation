<?xml version="1.0" encoding="UTF-8" ?>
<launch>
    <arg name="cloud" default="points_filtered_jetson"/>
    <arg name="nodelet_manager" default="geometric_traversability_manager"/>
    <arg name="nodelet_action" default="$(eval 'load' if nodelet_manager.strip() else 'standalone')"/>
    <arg name="bumper" default="false"/>
    <arg name="height" default="64"/>
    <arg name="width" default="256"/>
    <arg name="fov_elevation" default="90"/>  <!-- 90 deg -->

    <node if="$(eval nodelet_manager == 'geometric_traversability_manager')"
          name="$(arg nodelet_manager)" pkg="nodelet" type="nodelet" args="manager"
          respawn="true" respawn_delay="1.0" output="log">
        <param name="num_worker_threads" value="16"/>
    </node>

    <node name="max_filter_projection" pkg="nodelet" type="nodelet"
          args="$(arg nodelet_action) cloud_proc/projection $(arg nodelet_manager)"
          respawn="true" respawn_delay="1.0" output="log">
        <rosparam subst_value="true">
            height: $(arg height)
            width: $(arg width)
            keep: 3  <!-- max depth -->
            azimuth_only: false
        </rosparam>
        <param name="fov_elevation" value="$(eval arg('fov_elevation') / 180. * 3.1415)"/>

        <remap from="input" to="$(arg cloud)"/>
        <remap from="output" to="max_points"/>
    </node>

    <node name="max_filter_cloud_to_depth" pkg="traversability_estimation" type="cloud_to_depth"
          respawn="true" respawn_delay="1.0" output="screen">
        <rosparam>
            negative: true
        </rosparam>
        <remap from="cloud" to="max_points"/>
        <remap from="image" to="max_points_depth"/>
    </node>

    <node name="cloud_range_filter_max" pkg="nodelet" type="nodelet"
          args="$(arg nodelet_action) cloud_proc/range_filter $(arg nodelet_manager)"
          respawn="true" respawn_delay="1.0" output="log">
        <rosparam>
            field: x
            max: 5.0
        </rosparam>
        <remap from="input" to="max_points"/>
        <remap from="output" to="max_points_in_range"/>
    </node>

    <node name="cloud_voxel_filter_max" pkg="nodelet" type="nodelet"
          args="$(arg nodelet_action) cloud_proc/voxel_filter $(arg nodelet_manager)"
          respawn="true" respawn_delay="1.0" output="log">
        <rosparam>
            field: x
            grid: 0.125
            zero_valid: false
        </rosparam>
        <remap from="input" to="max_points_in_range"/>
        <remap from="output" to="max_points_125mm"/>
    </node>

    <node name="traversability_estimation_max" pkg="nodelet" type="nodelet"
          args="$(arg nodelet_action) naex/traversability $(arg nodelet_manager)"
          respawn="true" respawn_delay="1.0" output="screen">
        <rosparam>
            radius: 0.4
            max_dist: 0.4
            min_support: 3
            inclination_weight: 1.0
            normal_std_weight: 0.5
            fixed_frame: odom
            timeout: 1.0
        </rosparam>
        <remap from="input" to="max_points_125mm"/>
        <remap from="output" to="geometric_traversability_raw"/>
    </node>

    <node if="$(arg bumper)"
          name="virtual_bumper" pkg="augmented_robot_trackers" type="virtual_bumper_marv_sys.py"
          respawn="true" respawn_delay="1.0" output="log">
        <rosparam command="load" file="$(find augmented_robot_trackers)/src/utilities/configs/virtual_bumper_husky_sys.yaml"/>
        <remap from="cmd_vel_in" to="nav/cmd_vel"/>
        <remap from="cmd_vel_out" to="nav_safety/cmd_vel"/>
        <remap from="points_filtered" to="max_points_125mm"/>
    </node>
</launch>
