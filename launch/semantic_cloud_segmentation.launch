<?xml version="1.0" encoding="UTF-8" ?>
<launch>
    <arg name="device" default="cuda" doc="Device to run tensor operations on: cpu or cuda"/>
    <arg name="model_output" default="traversability"
	             doc="Point cloud segmentation network output type, weights files must be located in
		              '../config/weights/depth_cloud/' folder"/>
    <arg name="max_age" default="0.3"/>
    <arg name="nodelet_manager" default="segmentation_nodelet_manager"/>
    <arg name="cloud_in" default="points_filtered_jetson"/>
    <arg name="range_projection" default="false"/>
    <arg name="lidar_channels" default="128"/>
    <arg name="lidar_beams" default="1024"/>
    <arg name="debug" default="false"/>

    <node name="$(arg nodelet_manager)" pkg="nodelet" type="nodelet" args="manager"
          respawn="true" respawn_delay="1.0" output="screen">
        <param name="num_worker_threads" value="8"/>
    </node>

    <node name="points_filtered_throttle_5hz" pkg="nodelet" type="nodelet"
          args="load cras_nodelet_topic_tools/throttle_messages $(arg nodelet_manager)"
          respawn="true" respawn_delay="1.0" output="log">
        <param name="frequency" value="5.0"/>
        <remap from="~input" to="$(arg cloud_in)"/>
        <remap from="~output" to="points_filtered_5hz"/>
    </node>

    <node name="cloud_projection" pkg="nodelet" type="nodelet"
          args="load cloud_proc/projection $(arg nodelet_manager)"
          respawn="true" respawn_delay="1.0" output="log">
        <rosparam>
            keep: 2
            azimuth_only: true
            width: $(arg lidar_channels)
            height: $(arg lidar_beams)
        </rosparam>
        <remap from="input" to="points_filtered_5hz"/>
        <remap from="output" to="points_projected"/>
    </node>

    <node name="cloud_segmentation" pkg="traversability_estimation" type="cloud_segmentation" output="screen">
        <env name="PYTHONPATH" value="/home/robot/workspace/traversability/src/traversability_estimation/thirdparty/vision:$(optenv PYTHONPATH)"/>
        <rosparam subst_value="true">
            device: $(arg device)
            max_age: $(arg max_age)
            range_projection: $(arg range_projection)
            lidar_channels: $(arg lidar_channels)
            lidar_beams: $(arg lidar_beams)
            flexibility_weights: deeplabv3_resnet101_lr_0.0001_bs_8_epoch_62_FlexibilityClouds_depth_labels_flexibility_iou_0.884.pth
            traversability_weights: deeplabv3_resnet101_lr_0.0001_bs_8_epoch_90_TraversabilityClouds_depth_labels_traversability_iou_0.972.pth
            model_output: $(arg model_output)
            debug: $(arg debug)
        </rosparam>
        <remap from="cloud_in" to="points_projected"/>
        <remap from="cloud_out" to="~points"/>
    </node>

    <node name="cloud_voxel_filter_10cm" pkg="nodelet" type="nodelet"
          args="load cloud_proc/voxel_filter $(arg nodelet_manager)"
            respawn="true" respawn_delay="1.0" output="log">
        <rosparam>
            field: x
            grid: 0.1
            zero_valid: false
        </rosparam>
        <remap from="input" to="cloud_segmentation/points"/>
        <remap from="output" to="cloud_segmentation/points_10cm"/>
    </node>

    <node name="cloud_voxel_filter_20cm" pkg="nodelet" type="nodelet"
          args="load cloud_proc/voxel_filter $(arg nodelet_manager)"
            respawn="true" respawn_delay="1.0" output="log">
        <rosparam>
            field: x
            grid: 0.2
            zero_valid: false
        </rosparam>
        <remap from="input" to="cloud_segmentation/points_10cm"/>
        <remap from="output" to="cloud_segmentation/points_20cm"/>
    </node>
</launch>
