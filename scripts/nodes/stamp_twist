#!/usr/bin/env python
from __future__ import absolute_import, division, print_function
import rospy
from geometry_msgs.msg import Twist, TwistStamped


class StampTwist(object):

    def __init__(self):
        self.frame = rospy.get_param('~frame', 'base_link')
        self.pub = rospy.Publisher('twist_stamped', TwistStamped, queue_size=1)
        self.sub = rospy.Subscriber('twist', Twist, self.callback)

    def callback(self, msg):
        assert isinstance(msg, Twist)
        stamped_msg = TwistStamped()
        stamped_msg.header.stamp = rospy.Time.now()
        stamped_msg.header.frame_id = self.frame
        stamped_msg.twist = msg
        self.pub.publish(stamped_msg)


if __name__ == '__main__':
    rospy.init_node('stamp_twist')
    node = StampTwist()
    rospy.spin()
